plugins {
    id 'java'
    id 'java-library'

    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.cadixdev.licenser' version '0.6.1'

    id "io.freefair.lombok" version "6.4.1"

    id 'idea'

}

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name 'Paper'
        url "https://repo.destroystokyo.com/repository/maven-public/"
    }


    maven {
        name 'WorldEdit'
        url 'https://maven.sk89q.com/repo/'
    }

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.sk89q.worldedit:worldedit-core:6.1'

    compileOnly name: "spigot-1.8"
    compileOnly name: "fawe-1.8"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation 'org.mockito:mockito-core:4.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    testRuntimeOnly name: "fawe-1.8"
    testRuntimeOnly name: "spigot-1.8"
}


java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

configurations.all {
    attributes.attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 17)
}

tasks.compileJava.configure {
    options.release.set(8)
    options.encoding = 'UTF-8'
}

license {
    header = project.file('HEADER')
    include '**/*.java'
}

test {
    useJUnitPlatform()
}

processResources {
    def versionFile = file('version.properties')

    Properties versionProps = new Properties()

    versionProps.load(new FileInputStream(versionFile))
    def major = versionProps.getAt('major').toInteger()
    def minor = versionProps.getAt('minor').toInteger()
    def patch = versionProps.getAt('patch').toInteger()

    project.version = major + "." + minor + "." + patch
    expand(project.properties)
}


shadowJar {
    dependsOn processResources


    archiveFileName = "${archiveBaseName}-${archiveVersion}.${archiveExtension}"
    minimize()
}

build {
    dependsOn test
    dependsOn shadowJar

}